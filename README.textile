h1. Cuke4Duke

Cuke4Duke is an addon to Cucumber, making it possible to write step definitions in several different JVM languages.

h2. Building Cuke4Duke

First of all, you need "Maven":http://maven.apache.org/ installed.
Then you'll need "git":http://git-scm.com/

You'll also need "JRuby":http://jruby.org installed to build Cuke4Duke. If you're on OS X or Linux it's recommended you install JRuby
with "RVM":http://rvm.beginrescueend.com

With JRuby installed - bootstrap your environment by installing some gems:

Using RVM:
<pre>
mkdir -p ~/.m2/repository/.jruby
GEM_HOME=~/.m2/repository/.jruby GEM_PATH=~/.m2/repository/.jruby gem install bundler
GEM_HOME=~/.m2/repository/.jruby GEM_PATH=~/.m2/repository/.jruby bundle install
GEM_HOME=~/.m2/repository/.jruby GEM_PATH=~/.m2/repository/.jruby rake install
</pre>

Not using RVM:
<pre>
mkdir -p ~/.m2/repository/.jruby
GEM_HOME=~/.m2/repository/.jruby GEM_PATH=~/.m2/repository/.jruby jruby -S gem install bundler
GEM_HOME=~/.m2/repository/.jruby GEM_PATH=~/.m2/repository/.jruby jruby -S bundle install
GEM_HOME=~/.m2/repository/.jruby GEM_PATH=~/.m2/repository/.jruby jruby -S rake install
</pre>

With the gems installed, build the whole shebang (including the examples):

Using RVM:
<pre>rake build_all</pre>

Not using RVM:
<pre>jruby -S rake build_all</pre>

h2. Release process

First, bump the release number:

<pre>rake remove_snapshots</pre>

Build again:

<pre>rake build_all</pre>

If all is OK, commit:

<pre>git commit -m "Release"</pre>

And release:

<pre>rake release</pre>

Finally, bump version:

<pre>rake add_snapshots</pre>

And commit again:

<pre>git commit -m "Starting new development cycle"</pre>
